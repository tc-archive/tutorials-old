{:ok,
 [[{"url", "https://api.github.com/repos/elixir-lang/elixir/issues/2650"},
   {"labels_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2650/labels{/name}"},
   {"comments_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2650/comments"},
   {"events_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2650/events"},
   {"html_url", "https://github.com/elixir-lang/elixir/issues/2650"},
   {"id", 39845348}, {"number", 2650},
   {"title", "aliases should resolve for child applications"},
   {"user",
    [{"login", "johnfoconnor"}, {"id", 1815985},
     {"avatar_url", "https://avatars.githubusercontent.com/u/1815985?v=2"},
     {"gravatar_id", "c875071089cefe941dd2b26e75f2d08c"},
     {"url", "https://api.github.com/users/johnfoconnor"},
     {"html_url", "https://github.com/johnfoconnor"},
     {"followers_url", "https://api.github.com/users/johnfoconnor/followers"},
     {"following_url",
      "https://api.github.com/users/johnfoconnor/following{/other_user}"},
     {"gists_url", "https://api.github.com/users/johnfoconnor/gists{/gist_id}"},
     {"starred_url",
      "https://api.github.com/users/johnfoconnor/starred{/owner}{/repo}"},
     {"subscriptions_url",
      "https://api.github.com/users/johnfoconnor/subscriptions"},
     {"organizations_url", "https://api.github.com/users/johnfoconnor/orgs"},
     {"repos_url", "https://api.github.com/users/johnfoconnor/repos"},
     {"events_url",
      "https://api.github.com/users/johnfoconnor/events{/privacy}"},
     {"received_events_url",
      "https://api.github.com/users/johnfoconnor/received_events"},
     {"type", "User"}, {"site_admin", false}]},
   {"labels",
    [[{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/App%3AMix"},
      {"name", "App:Mix"}, {"color", "CCCCCC"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Kind%3ABug"},
      {"name", "Kind:Bug"}, {"color", "e10c02"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Level%3AAdvanced"},
      {"name", "Level:Advanced"}, {"color", "f7c6c7"}]]}, {"state", "open"},
   {"assignee", :null},
   {"milestone",
    [{"url", "https://api.github.com/repos/elixir-lang/elixir/milestones/10"},
     {"labels_url",
      "https://api.github.com/repos/elixir-lang/elixir/milestones/10/labels"},
     {"id", 705688}, {"number", 10}, {"title", "v1.0"}, {"description", ""},
     {"creator",
      [{"login", "josevalim"}, {"id", 9582},
       {"avatar_url", "https://avatars.githubusercontent.com/u/9582?v=2"},
       {"gravatar_id", "e837f6b7fd146ab16ed3d663476c063e"},
       {"url", "https://api.github.com/users/josevalim"},
       {"html_url", "https://github.com/josevalim"},
       {"followers_url", "https://api.github.com/users/josevalim/followers"},
       {"following_url",
        "https://api.github.com/users/josevalim/following{/other_user}"},
       {"gists_url", "https://api.github.com/users/josevalim/gists{/gist_id}"},
       {"starred_url",
        "https://api.github.com/users/josevalim/starred{/owner}{/repo}"},
       {"subscriptions_url",
        "https://api.github.com/users/josevalim/subscriptions"},
       {"organizations_url", "https://api.github.com/users/josevalim/orgs"},
       {"repos_url", "https://api.github.com/users/josevalim/repos"},
       {"events_url",
        "https://api.github.com/users/josevalim/events{/privacy}"},
       {"received_events_url",
        "https://api.github.com/users/josevalim/received_events"},
       {"type", "User"}, {"site_admin", false}]}, {"open_issues", 3},
     {"closed_issues", 65}, {"state", "open"},
     {"created_at", "2014-06-30T15:00:02Z"},
     {"updated_at", "2014-08-08T20:19:03Z"},
     {"due_on", "2014-08-30T07:00:00Z"}]}, {"comments", 1},
   {"created_at", "2014-08-08T17:32:38Z"},
   {"updated_at", "2014-08-08T18:31:49Z"}, {"closed_at", :null},
   {"body",
    "currently the alias resolution happens at the top level and does not occur for child applications\r\n\r\nex.\r\numbrella application with child app `foo` and alias in child foo [compile: &my_helper/1, \"compile\"]. if one executes `mix compile` at the top level the compile alias in foo should resolve\r\n"}],
  [{"url", "https://api.github.com/repos/elixir-lang/elixir/issues/2649"},
   {"labels_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2649/labels{/name}"},
   {"comments_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2649/comments"},
   {"events_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2649/events"},
   {"html_url", "https://github.com/elixir-lang/elixir/issues/2649"},
   {"id", 39844089}, {"number", 2649},
   {"title",
    "`:logger` application terminate during compilation of custom backends"},
   {"user",
    [{"login", "onkel-dirtus"}, {"id", 57659},
     {"avatar_url", "https://avatars.githubusercontent.com/u/57659?v=2"},
     {"gravatar_id", "eb97a204fba97d5f2e4bd7f2c5d5ab6b"},
     {"url", "https://api.github.com/users/onkel-dirtus"},
     {"html_url", "https://github.com/onkel-dirtus"},
     {"followers_url", "https://api.github.com/users/onkel-dirtus/followers"},
     {"following_url",
      "https://api.github.com/users/onkel-dirtus/following{/other_user}"},
     {"gists_url", "https://api.github.com/users/onkel-dirtus/gists{/gist_id}"},
     {"starred_url",
      "https://api.github.com/users/onkel-dirtus/starred{/owner}{/repo}"},
     {"subscriptions_url",
      "https://api.github.com/users/onkel-dirtus/subscriptions"},
     {"organizations_url", "https://api.github.com/users/onkel-dirtus/orgs"},
     {"repos_url", "https://api.github.com/users/onkel-dirtus/repos"},
     {"events_url",
      "https://api.github.com/users/onkel-dirtus/events{/privacy}"},
     {"received_events_url",
      "https://api.github.com/users/onkel-dirtus/received_events"},
     {"type", "User"}, {"site_admin", false}]},
   {"labels",
    [[{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/App%3ALogger"},
      {"name", "App:Logger"}, {"color", "cccccc"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/App%3AMix"},
      {"name", "App:Mix"}, {"color", "CCCCCC"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Kind%3ABug"},
      {"name", "Kind:Bug"}, {"color", "e10c02"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Level%3AAdvanced"},
      {"name", "Level:Advanced"}, {"color", "f7c6c7"}]]}, {"state", "open"},
   {"assignee", :null},
   {"milestone",
    [{"url", "https://api.github.com/repos/elixir-lang/elixir/milestones/10"},
     {"labels_url",
      "https://api.github.com/repos/elixir-lang/elixir/milestones/10/labels"},
     {"id", 705688}, {"number", 10}, {"title", "v1.0"}, {"description", ""},
     {"creator",
      [{"login", "josevalim"}, {"id", 9582},
       {"avatar_url", "https://avatars.githubusercontent.com/u/9582?v=2"},
       {"gravatar_id", "e837f6b7fd146ab16ed3d663476c063e"},
       {"url", "https://api.github.com/users/josevalim"},
       {"html_url", "https://github.com/josevalim"},
       {"followers_url", "https://api.github.com/users/josevalim/followers"},
       {"following_url",
        "https://api.github.com/users/josevalim/following{/other_user}"},
       {"gists_url", "https://api.github.com/users/josevalim/gists{/gist_id}"},
       {"starred_url",
        "https://api.github.com/users/josevalim/starred{/owner}{/repo}"},
       {"subscriptions_url",
        "https://api.github.com/users/josevalim/subscriptions"},
       {"organizations_url", "https://api.github.com/users/josevalim/orgs"},
       {"repos_url", "https://api.github.com/users/josevalim/repos"},
       {"events_url",
        "https://api.github.com/users/josevalim/events{/privacy}"},
       {"received_events_url",
        "https://api.github.com/users/josevalim/received_events"},
       {"type", "User"}, {"site_admin", false}]}, {"open_issues", 3},
     {"closed_issues", 65}, {"state", "open"},
     {"created_at", "2014-06-30T15:00:02Z"},
     {"updated_at", "2014-08-08T20:19:03Z"},
     {"due_on", "2014-08-30T07:00:00Z"}]}, {"comments", 6},
   {"created_at", "2014-08-08T17:15:40Z"},
   {"updated_at", "2014-08-08T20:19:03Z"}, {"closed_at", :null},
   {"body",
    "When the backend is included in the `:logger` application config"}],
  [{"url", "https://api.github.com/repos/elixir-lang/elixir/issues/2612"},
   {"labels_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2612/labels{/name}"},
   {"comments_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2612/comments"},
   {"events_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2612/events"},
   {"html_url", "https://github.com/elixir-lang/elixir/issues/2612"},
   {"id", 39224052}, {"number", 2612},
   {"title", "private and opaque types details showing up in Iex"},
   {"user",
    [{"login", "herenowcoder"}, {"id", 32460},
     {"avatar_url", "https://avatars.githubusercontent.com/u/32460?v=2"},
     {"gravatar_id", "710f4281dad38ce5e076546907b68244"},
     {"url", "https://api.github.com/users/herenowcoder"},
     {"html_url", "https://github.com/herenowcoder"},
     {"followers_url", "https://api.github.com/users/herenowcoder/followers"},
     {"following_url",
      "https://api.github.com/users/herenowcoder/following{/other_user}"},
     {"gists_url", "https://api.github.com/users/herenowcoder/gists{/gist_id}"},
     {"starred_url",
      "https://api.github.com/users/herenowcoder/starred{/owner}{/repo}"},
     {"subscriptions_url",
      "https://api.github.com/users/herenowcoder/subscriptions"},
     {"organizations_url", "https://api.github.com/users/herenowcoder/orgs"},
     {"repos_url", "https://api.github.com/users/herenowcoder/repos"},
     {"events_url",
      "https://api.github.com/users/herenowcoder/events{/privacy}"},
     {"received_events_url",
      "https://api.github.com/users/herenowcoder/received_events"},
     {"type", "User"}, {"site_admin", false}]},
   {"labels",
    [[{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/App%3AIEx"},
      {"name", "App:IEx"}, {"color", "CCCCCC"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Kind%3AChore"},
      {"name", "Kind:Chore"}, {"color", "fbca04"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Level%3AStarter"},
      {"name", "Level:Starter"}, {"color", "fef2c0"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Note%3ADiscussion"},
      {"name", "Note:Discussion"}, {"color", "bfdadc"}]]}, {"state", "open"},
   {"assignee", :null}, {"milestone", :null}, {"comments", 11},
   {"created_at", "2014-07-31T18:38:43Z"},
   {"updated_at", "2014-08-01T13:25:28Z"}, {"closed_at", :null},
   {"body",
    "Here's what we have:\r\n```Elixir\r\n% cat types.ex      \r\ndefmodule Foo do\r\n  @type   public_t :: integer\r\n  @typep  priv_t   :: integer\r\n  @opaque opaque_t :: integer\r\nend\r\n% iex               \r\nErlang/OTP 17 [erts-6.1] [source] [async-threads:10] [hipe] [kernel-poll:false]\r\n\r\nInteractive Elixir (0.14.3) - press Ctrl+C to exit (type h() ENTER for help)\r\niex(1)> c(\"types.ex\")\r\ntypes.ex:3: warning: type priv_t() is unused\r\n[Foo]\r\niex(2)> t Foo\r\n@opaque opaque_t() :: integer()\r\n@typep priv_t() :: integer()\r\n@type public_t() :: integer()\r\n```\r\n\r\nWell opaque and private types do make a difference for dialyzer. But for clarity, shouldn't their details be silenced in IEx?\r\n\r\nLike:\r\n```\r\niex> t Foo\r\n@opaque opaque_t()\r\n@typep priv_t()\r\n@type public_t() :: integer()\r\n```"}],
  [{"url", "https://api.github.com/repos/elixir-lang/elixir/issues/2608"},
   {"labels_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2608/labels{/name}"},
   {"comments_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2608/comments"},
   {"events_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2608/events"},
   {"html_url", "https://github.com/elixir-lang/elixir/issues/2608"},
   {"id", 39144101}, {"number", 2608},
   {"title", "Invalid space chars in tokenizer should give better error"},
   {"user",
    [{"login", "ericmj"}, {"id", 316890},
     {"avatar_url", "https://avatars.githubusercontent.com/u/316890?v=2"},
     {"gravatar_id", "6aa1f94af85d7e7dc9b80e9ba3d6e947"},
     {"url", "https://api.github.com/users/ericmj"},
     {"html_url", "https://github.com/ericmj"},
     {"followers_url", "https://api.github.com/users/ericmj/followers"},
     {"following_url",
      "https://api.github.com/users/ericmj/following{/other_user}"},
     {"gists_url", "https://api.github.com/users/ericmj/gists{/gist_id}"},
     {"starred_url",
      "https://api.github.com/users/ericmj/starred{/owner}{/repo}"},
     {"subscriptions_url", "https://api.github.com/users/ericmj/subscriptions"},
     {"organizations_url", "https://api.github.com/users/ericmj/orgs"},
     {"repos_url", "https://api.github.com/users/ericmj/repos"},
     {"events_url", "https://api.github.com/users/ericmj/events{/privacy}"},
     {"received_events_url",
      "https://api.github.com/users/ericmj/received_events"}, {"type", "User"},
     {"site_admin", false}]},
   {"labels",
    [[{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/App%3AElixir"},
      {"name", "App:Elixir"}, {"color", "CCCCCC"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Kind%3AEnhacement"},
      {"name", "Kind:Enhacement"}, {"color", "009800"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Level%3AIntermediate"},
      {"name", "Level:Intermediate"}, {"color", "fad8c7"}]]}, {"state", "open"},
   {"assignee", :null}, {"milestone", :null}, {"comments", 2},
   {"created_at", "2014-07-30T22:29:26Z"},
   {"updated_at", "2014-08-02T01:42:03Z"}, {"closed_at", :null},
   {"body",
    "Space characters not allowed in the language, such as non-breaking space, should be given a clearer error message instead of `invalid token:  foo`."}],
  [{"url", "https://api.github.com/repos/elixir-lang/elixir/issues/2603"},
   {"labels_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2603/labels{/name}"},
   {"comments_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2603/comments"},
   {"events_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2603/events"},
   {"html_url", "https://github.com/elixir-lang/elixir/issues/2603"},
   {"id", 39018443}, {"number", 2603},
   {"title", "Add spec to a shortdoc returned by `h` iex helper"},
   {"user",
    [{"login", "khia"}, {"id", 347727},
     {"avatar_url", "https://avatars.githubusercontent.com/u/347727?v=2"},
     {"gravatar_id", "2141489dae4d12ecc360fa369a49bc3c"},
     {"url", "https://api.github.com/users/khia"},
     {"html_url", "https://github.com/khia"},
     {"followers_url", "https://api.github.com/users/khia/followers"},
     {"following_url",
      "https://api.github.com/users/khia/following{/other_user}"},
     {"gists_url", "https://api.github.com/users/khia/gists{/gist_id}"},
     {"starred_url",
      "https://api.github.com/users/khia/starred{/owner}{/repo}"},
     {"subscriptions_url", "https://api.github.com/users/khia/subscriptions"},
     {"organizations_url", "https://api.github.com/users/khia/orgs"},
     {"repos_url", "https://api.github.com/users/khia/repos"},
     {"events_url", "https://api.github.com/users/khia/events{/privacy}"},
     {"received_events_url",
      "https://api.github.com/users/khia/received_events"}, {"type", "User"},
     {"site_admin", false}]},
   {"labels",
    [[{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/App%3AIEx"},
      {"name", "App:IEx"}, {"color", "CCCCCC"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Kind%3AEnhacement"},
      {"name", "Kind:Enhacement"}, {"color", "009800"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Level%3AIntermediate"},
      {"name", "Level:Intermediate"}, {"color", "fad8c7"}]]}, {"state", "open"},
   {"assignee", :null}, {"milestone", :null}, {"comments", 4},
   {"created_at", "2014-07-29T18:19:10Z"},
   {"updated_at", "2014-07-30T12:13:26Z"}, {"closed_at", :null},
   {"body",
    "Currently when `h` helper is used return value of a function is not present in doc. For example:\r\n```\r\niex> h System.cmd\r\n\r\n                       def cmd(command, args, opts \\\\ [])                       \r\n\r\nExecutes the given command with args.\r\n\r\ncommand is expected to be an executable available in PATH unless an absolute\r\npath is given.\r\n....\r\n```\r\nIt would be a good idea to provide a spec of a function in the same way as in [System.cmd](http://elixir-lang.org/docs/stable/elixir/System.html#cmd/3)"}],
  [{"url", "https://api.github.com/repos/elixir-lang/elixir/issues/2584"},
   {"labels_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2584/labels{/name}"},
   {"comments_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2584/comments"},
   {"events_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2584/events"},
   {"html_url", "https://github.com/elixir-lang/elixir/pull/2584"},
   {"id", 38824797}, {"number", 2584},
   {"title", "Enum.sample using reservoir sampling"},
   {"user",
    [{"login", "herenowcoder"}, {"id", 32460},
     {"avatar_url", "https://avatars.githubusercontent.com/u/32460?v=2"},
     {"gravatar_id", "710f4281dad38ce5e076546907b68244"},
     {"url", "https://api.github.com/users/herenowcoder"},
     {"html_url", "https://github.com/herenowcoder"},
     {"followers_url", "https://api.github.com/users/herenowcoder/followers"},
     {"following_url",
      "https://api.github.com/users/herenowcoder/following{/other_user}"},
     {"gists_url", "https://api.github.com/users/herenowcoder/gists{/gist_id}"},
     {"starred_url",
      "https://api.github.com/users/herenowcoder/starred{/owner}{/repo}"},
     {"subscriptions_url",
      "https://api.github.com/users/herenowcoder/subscriptions"},
     {"organizations_url", "https://api.github.com/users/herenowcoder/orgs"},
     {"repos_url", "https://api.github.com/users/herenowcoder/repos"},
     {"events_url",
      "https://api.github.com/users/herenowcoder/events{/privacy}"},
     {"received_events_url",
      "https://api.github.com/users/herenowcoder/received_events"},
     {"type", "User"}, {"site_admin", false}]}, {"labels", []},
   {"state", "open"}, {"assignee", :null}, {"milestone", :null},
   {"comments", 11}, {"created_at", "2014-07-26T19:43:28Z"},
   {"updated_at", "2014-08-04T10:09:03Z"}, {"closed_at", :null},
   {"pull_request",
    [{"url", "https://api.github.com/repos/elixir-lang/elixir/pulls/2584"},
     {"html_url", "https://github.com/elixir-lang/elixir/pull/2584"},
     {"diff_url", "https://github.com/elixir-lang/elixir/pull/2584.diff"},
     {"patch_url", "https://github.com/elixir-lang/elixir/pull/2584.patch"}]},
   {"body",
    "Here's the PR for `Enum.sample` with single pass of the input collection, using [reservoir sampling](http://en.wikipedia.org/wiki/Reservoir_sampling), based on the experiments [we've talked about](https://github.com/elixir-lang/elixir/pull/2565).\r\n\r\nMentioning @joshnuss as he first came up with the topic, so the chance he needs the functionality :)\r\n\r\n\r\n~~The algo has a funny corner case, that when the requested sample size is bigger than a collection size, the original collection is returned untouched - ie. not randomised. Is this desired behaviour for the API enduser?~~\r\n\r\n~~If not, we can fallback to shuffling the sample buffer in such case, with a disadvantage that it will take another piece of time - but with the advantage that the input collection would not be walked again, because shuffling would be on the sample we already got. We obviously can't detect such situation early, because we know the size of the whole collection only after walking it.~~\r\n\r\nA side note, how on earth is the random generator for doc_test seeded? :) I succeeded with in-doc examples only by trial and error ;)"}],
  [{"url", "https://api.github.com/repos/elixir-lang/elixir/issues/2571"},
   {"labels_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2571/labels{/name}"},
   {"comments_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2571/comments"},
   {"events_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2571/events"},
   {"html_url", "https://github.com/elixir-lang/elixir/issues/2571"},
   {"id", 38586720}, {"number", 2571},
   {"title", "Mix is horribly slow when a high open-file ulimit is set"},
   {"user",
    [{"login", "tsutsu"}, {"id", 3542676},
     {"avatar_url", "https://avatars.githubusercontent.com/u/3542676?v=2"},
     {"gravatar_id", "ff0d6c934fba08135f95947533584eb9"},
     {"url", "https://api.github.com/users/tsutsu"},
     {"html_url", "https://github.com/tsutsu"},
     {"followers_url", "https://api.github.com/users/tsutsu/followers"},
     {"following_url",
      "https://api.github.com/users/tsutsu/following{/other_user}"},
     {"gists_url", "https://api.github.com/users/tsutsu/gists{/gist_id}"},
     {"starred_url",
      "https://api.github.com/users/tsutsu/starred{/owner}{/repo}"},
     {"subscriptions_url", "https://api.github.com/users/tsutsu/subscriptions"},
     {"organizations_url", "https://api.github.com/users/tsutsu/orgs"},
     {"repos_url", "https://api.github.com/users/tsutsu/repos"},
     {"events_url", "https://api.github.com/users/tsutsu/events{/privacy}"},
     {"received_events_url",
      "https://api.github.com/users/tsutsu/received_events"}, {"type", "User"},
     {"site_admin", false}]},
   {"labels",
    [[{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/App%3AMix"},
      {"name", "App:Mix"}, {"color", "CCCCCC"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Kind%3AChore"},
      {"name", "Kind:Chore"}, {"color", "fbca04"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Level%3AAdvanced"},
      {"name", "Level:Advanced"}, {"color", "f7c6c7"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Note%3ANeeds+more+info"},
      {"name", "Note:Needs more info"}, {"color", "bfdadc"}]]},
   {"state", "open"}, {"assignee", :null},
   {"milestone",
    [{"url", "https://api.github.com/repos/elixir-lang/elixir/milestones/10"},
     {"labels_url",
      "https://api.github.com/repos/elixir-lang/elixir/milestones/10/labels"},
     {"id", 705688}, {"number", 10}, {"title", "v1.0"}, {"description", ""},
     {"creator",
      [{"login", "josevalim"}, {"id", 9582},
       {"avatar_url", "https://avatars.githubusercontent.com/u/9582?v=2"},
       {"gravatar_id", "e837f6b7fd146ab16ed3d663476c063e"},
       {"url", "https://api.github.com/users/josevalim"},
       {"html_url", "https://github.com/josevalim"},
       {"followers_url", "https://api.github.com/users/josevalim/followers"},
       {"following_url",
        "https://api.github.com/users/josevalim/following{/other_user}"},
       {"gists_url", "https://api.github.com/users/josevalim/gists{/gist_id}"},
       {"starred_url",
        "https://api.github.com/users/josevalim/starred{/owner}{/repo}"},
       {"subscriptions_url",
        "https://api.github.com/users/josevalim/subscriptions"},
       {"organizations_url", "https://api.github.com/users/josevalim/orgs"},
       {"repos_url", "https://api.github.com/users/josevalim/repos"},
       {"events_url",
        "https://api.github.com/users/josevalim/events{/privacy}"},
       {"received_events_url",
        "https://api.github.com/users/josevalim/received_events"},
       {"type", "User"}, {"site_admin", false}]}, {"open_issues", 3},
     {"closed_issues", 65}, {"state", "open"},
     {"created_at", "2014-06-30T15:00:02Z"},
     {"updated_at", "2014-08-08T20:19:03Z"},
     {"due_on", "2014-08-30T07:00:00Z"}]}, {"comments", 5},
   {"created_at", "2014-07-24T00:20:16Z"},
   {"updated_at", "2014-08-08T11:59:36Z"}, {"closed_at", :null},
   {"body",
    "Here's a regular Docker session containing a Mix task:\r\n\r\n    root@048d82b6188e:/build# ulimit -n\r\n    4096\r\n    root@048d82b6188e:/build# time (mix deps.get --no-compile)\r\n    [...]\r\n    real      1m8.753s\r\n    user      0m5.516s\r\n    sys       0m4.286s\r\n\r\nNow here's one with a higher open-file-descriptors ulimit set (which happened to be the default on my system):\r\n\r\n    root@63fdb1ab978f:/build# ulimit -n\r\n    524288\r\n    root@63fdb1ab978f:/build# time (mix deps.get --no-compile)\r\n    [...]\r\n    real      2m44.383s\r\n    user      0m46.817s\r\n    sys       0m27.514s\r\n\r\nAs far as I can tell, this is what's going on:\r\n\r\n1. Mix spawns git as a port process.\r\n2. Erlang ports create subprocesses using `child_setup`.\r\n3. `child_setup` closes open file-descriptors to ensure the child has no access to them.\r\n4. Either Mix, or the Erlang VM itself, keeps tons of open file descriptors around that `child_setup` has to close each time it's called.\r\n5. Linux does not support `closefrom(2)`, so `child_setup` has to close all these FDs in sequence.\r\n\r\nGiven a Mix task that spawns N subprocesses while holding M FDs open, this amounts to O(NM) extra context switches from system calls to `close(2)`, which shakes out as a ~3x slowdown on our workload."}],
  [{"url", "https://api.github.com/repos/elixir-lang/elixir/issues/2569"},
   {"labels_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2569/labels{/name}"},
   {"comments_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2569/comments"},
   {"events_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2569/events"},
   {"html_url", "https://github.com/elixir-lang/elixir/issues/2569"},
   {"id", 38437888}, {"number", 2569},
   {"title", "Add 'mix deps.unlock --unused' and `mix deps.clean --unused'"},
   {"user",
    [{"login", "alco"}, {"id", 207748},
     {"avatar_url", "https://avatars.githubusercontent.com/u/207748?v=2"},
     {"gravatar_id", "96f31e49f44b5ba166999c4576c43c41"},
     {"url", "https://api.github.com/users/alco"},
     {"html_url", "https://github.com/alco"},
     {"followers_url", "https://api.github.com/users/alco/followers"},
     {"following_url",
      "https://api.github.com/users/alco/following{/other_user}"},
     {"gists_url", "https://api.github.com/users/alco/gists{/gist_id}"},
     {"starred_url",
      "https://api.github.com/users/alco/starred{/owner}{/repo}"},
     {"subscriptions_url", "https://api.github.com/users/alco/subscriptions"},
     {"organizations_url", "https://api.github.com/users/alco/orgs"},
     {"repos_url", "https://api.github.com/users/alco/repos"},
     {"events_url", "https://api.github.com/users/alco/events{/privacy}"},
     {"received_events_url",
      "https://api.github.com/users/alco/received_events"}, {"type", "User"},
     {"site_admin", false}]},
   {"labels",
    [[{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/App%3AMix"},
      {"name", "App:Mix"}, {"color", "CCCCCC"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Kind%3AEnhacement"},
      {"name", "Kind:Enhacement"}, {"color", "009800"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Level%3AStarter"},
      {"name", "Level:Starter"}, {"color", "fef2c0"}]]}, {"state", "open"},
   {"assignee", :null}, {"milestone", :null}, {"comments", 15},
   {"created_at", "2014-07-22T20:01:27Z"},
   {"updated_at", "2014-08-02T19:16:17Z"}, {"closed_at", :null},
   {"body",
    "When a dependency is removed from `mix.exs`, its traces continue to lurk in `mix.lock` (which will cause it to be fetched on future calls to `mix deps.get`) and in `deps/`.\r\n\r\nCurrently, the only way to remove such a dependency would be to manually call `mix deps.unlock <name` and `mix deps.clean <name>`.\r\n\r\nIt would be more practical to be able to say `mix deps.clean --unused --unlock` and `mix deps.unlock --unused`."}],
  [{"url", "https://api.github.com/repos/elixir-lang/elixir/issues/2547"},
   {"labels_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2547/labels{/name}"},
   {"comments_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2547/comments"},
   {"events_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2547/events"},
   {"html_url", "https://github.com/elixir-lang/elixir/issues/2547"},
   {"id", 38008449}, {"number", 2547},
   {"title", "Mix silently ignores invalid options"},
   {"user",
    [{"login", "xxiii23"}, {"id", 8182945},
     {"avatar_url", "https://avatars.githubusercontent.com/u/8182945?v=2"},
     {"gravatar_id", "605595eb044fbea3eafb611d3e3aee37"},
     {"url", "https://api.github.com/users/xxiii23"},
     {"html_url", "https://github.com/xxiii23"},
     {"followers_url", "https://api.github.com/users/xxiii23/followers"},
     {"following_url",
      "https://api.github.com/users/xxiii23/following{/other_user}"},
     {"gists_url", "https://api.github.com/users/xxiii23/gists{/gist_id}"},
     {"starred_url",
      "https://api.github.com/users/xxiii23/starred{/owner}{/repo}"},
     {"subscriptions_url",
      "https://api.github.com/users/xxiii23/subscriptions"},
     {"organizations_url", "https://api.github.com/users/xxiii23/orgs"},
     {"repos_url", "https://api.github.com/users/xxiii23/repos"},
     {"events_url", "https://api.github.com/users/xxiii23/events{/privacy}"},
     {"received_events_url",
      "https://api.github.com/users/xxiii23/received_events"}, {"type", "User"},
     {"site_admin", false}]},
   {"labels",
    [[{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/App%3AMix"},
      {"name", "App:Mix"}, {"color", "CCCCCC"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Kind%3ABug"},
      {"name", "Kind:Bug"}, {"color", "e10c02"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Level%3AAdvanced"},
      {"name", "Level:Advanced"}, {"color", "f7c6c7"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Note%3ADiscussion"},
      {"name", "Note:Discussion"}, {"color", "bfdadc"}]]}, {"state", "open"},
   {"assignee", :null}, {"milestone", :null}, {"comments", 4},
   {"created_at", "2014-07-16T18:05:35Z"},
   {"updated_at", "2014-07-27T13:30:29Z"}, {"closed_at", :null},
   {"body",
    "Instead of generating an error, mix silently ignores/discards invalid options (at least with mix new):\r\n\r\nmix new test_mod -module TEST_mod (works, but should have been --module, and module gets named TestMod))\r\nmix new test_mod --bleagidyblah TEST_mod (works, same as above)\r\n"}],
  [{"url", "https://api.github.com/repos/elixir-lang/elixir/issues/2524"},
   {"labels_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2524/labels{/name}"},
   {"comments_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2524/comments"},
   {"events_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2524/events"},
   {"html_url", "https://github.com/elixir-lang/elixir/issues/2524"},
   {"id", 37715430}, {"number", 2524},
   {"title", "Missing instructions for system wide installation "},
   {"user",
    [{"login", "pmontrasio"}, {"id", 47483},
     {"avatar_url", "https://avatars.githubusercontent.com/u/47483?v=2"},
     {"gravatar_id", "7de465f222e6a9c7fe658e370d0bfe05"},
     {"url", "https://api.github.com/users/pmontrasio"},
     {"html_url", "https://github.com/pmontrasio"},
     {"followers_url", "https://api.github.com/users/pmontrasio/followers"},
     {"following_url",
      "https://api.github.com/users/pmontrasio/following{/other_user}"},
     {"gists_url", "https://api.github.com/users/pmontrasio/gists{/gist_id}"},
     {"starred_url",
      "https://api.github.com/users/pmontrasio/starred{/owner}{/repo}"},
     {"subscriptions_url",
      "https://api.github.com/users/pmontrasio/subscriptions"},
     {"organizations_url", "https://api.github.com/users/pmontrasio/orgs"},
     {"repos_url", "https://api.github.com/users/pmontrasio/repos"},
     {"events_url", "https://api.github.com/users/pmontrasio/events{/privacy}"},
     {"received_events_url",
      "https://api.github.com/users/pmontrasio/received_events"},
     {"type", "User"}, {"site_admin", false}]},
   {"labels",
    [[{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/App%3AElixir"},
      {"name", "App:Elixir"}, {"color", "CCCCCC"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Kind%3AChore"},
      {"name", "Kind:Chore"}, {"color", "fbca04"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Note%3ADiscussion"},
      {"name", "Note:Discussion"}, {"color", "bfdadc"}]]}, {"state", "open"},
   {"assignee", :null}, {"milestone", :null}, {"comments", 1},
   {"created_at", "2014-07-12T08:19:20Z"},
   {"updated_at", "2014-07-12T10:39:14Z"}, {"closed_at", :null},
   {"body",
    "I installed Erlang R17, downloaded the precompiled package and unzipped it.\r\nRunning elixir from the package directory works even without\r\n\r\n```\r\nexport PATH=\"$PATH:/path/to/elixir/bin\"\r\n```\r\n\r\n(that's from the Getting Started page of the web site).\r\nCalling bin/iex is enough.\r\n\r\nYou could provide instructions to install in a system directory.\r\nIt's easy but automating it with a install.sh script could be a time saver and prevent somebody to get lost from the language.\r\n\r\nThis works on a typical Linux system.\r\n\r\n```\r\ncd bin\r\nsudo cp elixir elixirc iex mix /usr/local/bin\r\ncd ../lib\r\nsudo cp -R eex/ /usr/local/lib/\r\nsudo cp -R elixir/ /usr/local/lib/\r\nsudo cp -R ex_unit/ /usr/local/lib/\r\nsudo cp -R iex/ /usr/local/lib/\r\nsudo cp -R mix/ /usr/local/lib/\r\n```\r\n"}],
  [{"url", "https://api.github.com/repos/elixir-lang/elixir/issues/2523"},
   {"labels_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2523/labels{/name}"},
   {"comments_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2523/comments"},
   {"events_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2523/events"},
   {"html_url", "https://github.com/elixir-lang/elixir/pull/2523"},
   {"id", 37701094}, {"number", 2523},
   {"title", "Keyword.bool/3 and Keyword.bool!/2"},
   {"user",
    [{"login", "guilleiguaran"}, {"id", 160941},
     {"avatar_url", "https://avatars.githubusercontent.com/u/160941?v=2"},
     {"gravatar_id", "73d57855a3bfe5c534596197a895ab6e"},
     {"url", "https://api.github.com/users/guilleiguaran"},
     {"html_url", "https://github.com/guilleiguaran"},
     {"followers_url", "https://api.github.com/users/guilleiguaran/followers"},
     {"following_url",
      "https://api.github.com/users/guilleiguaran/following{/other_user}"},
     {"gists_url",
      "https://api.github.com/users/guilleiguaran/gists{/gist_id}"},
     {"starred_url",
      "https://api.github.com/users/guilleiguaran/starred{/owner}{/repo}"},
     {"subscriptions_url",
      "https://api.github.com/users/guilleiguaran/subscriptions"},
     {"organizations_url", "https://api.github.com/users/guilleiguaran/orgs"},
     {"repos_url", "https://api.github.com/users/guilleiguaran/repos"},
     {"events_url",
      "https://api.github.com/users/guilleiguaran/events{/privacy}"},
     {"received_events_url",
      "https://api.github.com/users/guilleiguaran/received_events"},
     {"type", "User"}, {"site_admin", false}]}, {"labels", []},
   {"state", "open"}, {"assignee", :null}, {"milestone", :null},
   {"comments", 0}, {"created_at", "2014-07-11T21:58:40Z"},
   {"updated_at", "2014-07-11T21:58:40Z"}, {"closed_at", :null},
   {"pull_request",
    [{"url", "https://api.github.com/repos/elixir-lang/elixir/pulls/2523"},
     {"html_url", "https://github.com/elixir-lang/elixir/pull/2523"},
     {"diff_url", "https://github.com/elixir-lang/elixir/pull/2523.diff"},
     {"patch_url", "https://github.com/elixir-lang/elixir/pull/2523.patch"}]},
   {"body", "Implementation of idea suggested in #2497"}],
  [{"url", "https://api.github.com/repos/elixir-lang/elixir/issues/2519"},
   {"labels_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2519/labels{/name}"},
   {"comments_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2519/comments"},
   {"events_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2519/events"},
   {"html_url", "https://github.com/elixir-lang/elixir/issues/2519"},
   {"id", 37670829}, {"number", 2519},
   {"title", "Tab completion does not work for aliases"},
   {"user",
    [{"login", "alco"}, {"id", 207748},
     {"avatar_url", "https://avatars.githubusercontent.com/u/207748?v=2"},
     {"gravatar_id", "96f31e49f44b5ba166999c4576c43c41"},
     {"url", "https://api.github.com/users/alco"},
     {"html_url", "https://github.com/alco"},
     {"followers_url", "https://api.github.com/users/alco/followers"},
     {"following_url",
      "https://api.github.com/users/alco/following{/other_user}"},
     {"gists_url", "https://api.github.com/users/alco/gists{/gist_id}"},
     {"starred_url",
      "https://api.github.com/users/alco/starred{/owner}{/repo}"},
     {"subscriptions_url", "https://api.github.com/users/alco/subscriptions"},
     {"organizations_url", "https://api.github.com/users/alco/orgs"},
     {"repos_url", "https://api.github.com/users/alco/repos"},
     {"events_url", "https://api.github.com/users/alco/events{/privacy}"},
     {"received_events_url",
      "https://api.github.com/users/alco/received_events"}, {"type", "User"},
     {"site_admin", false}]},
   {"labels",
    [[{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/App%3AIEx"},
      {"name", "App:IEx"}, {"color", "CCCCCC"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Kind%3ABug"},
      {"name", "Kind:Bug"}, {"color", "e10c02"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Level%3AAdvanced"},
      {"name", "Level:Advanced"}, {"color", "f7c6c7"}]]}, {"state", "open"},
   {"assignee", :null}, {"milestone", :null}, {"comments", 2},
   {"created_at", "2014-07-11T15:32:16Z"},
   {"updated_at", "2014-07-13T07:37:58Z"}, {"closed_at", :null},
   {"body",
    "```elixir\r\ndefmodule A.B.C do\r\n  def a do end\r\n\r\n  def b(x) do x end\r\n\r\n  def c(y) do -y end\r\nend\r\n```\r\n\r\n```iex\r\niex(1)> A.B.C.<tab>\r\na/0    b/1    c/1\r\n\r\niex(2)> alias A.B.C\r\nnil\r\niex(3)> C.<tab>\r\n# nothing\r\n\r\niex(4)> alias A.B.C, as: Other\r\nnil\r\niex(5)> Other.<tab>\r\n# nothing\r\n```"}],
  [{"url", "https://api.github.com/repos/elixir-lang/elixir/issues/2515"},
   {"labels_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2515/labels{/name}"},
   {"comments_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2515/comments"},
   {"events_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2515/events"},
   {"html_url", "https://github.com/elixir-lang/elixir/issues/2515"},
   {"id", 37647794}, {"number", 2515},
   {"title", "Add support for suspendable Streams"},
   {"user",
    [{"login", "ewildgoose"}, {"id", 13366},
     {"avatar_url", "https://avatars.githubusercontent.com/u/13366?v=2"},
     {"gravatar_id", "3229eee09659ae30fe728c1759cc5d53"},
     {"url", "https://api.github.com/users/ewildgoose"},
     {"html_url", "https://github.com/ewildgoose"},
     {"followers_url", "https://api.github.com/users/ewildgoose/followers"},
     {"following_url",
      "https://api.github.com/users/ewildgoose/following{/other_user}"},
     {"gists_url", "https://api.github.com/users/ewildgoose/gists{/gist_id}"},
     {"starred_url",
      "https://api.github.com/users/ewildgoose/starred{/owner}{/repo}"},
     {"subscriptions_url",
      "https://api.github.com/users/ewildgoose/subscriptions"},
     {"organizations_url", "https://api.github.com/users/ewildgoose/orgs"},
     {"repos_url", "https://api.github.com/users/ewildgoose/repos"},
     {"events_url", "https://api.github.com/users/ewildgoose/events{/privacy}"},
     {"received_events_url",
      "https://api.github.com/users/ewildgoose/received_events"},
     {"type", "User"}, {"site_admin", false}]},
   {"labels",
    [[{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/App%3AElixir"},
      {"name", "App:Elixir"}, {"color", "CCCCCC"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Kind%3AFeature"},
      {"name", "Kind:Feature"}, {"color", "0052cc"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Level%3AAdvanced"},
      {"name", "Level:Advanced"}, {"color", "f7c6c7"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Note%3ADiscussion"},
      {"name", "Note:Discussion"}, {"color", "bfdadc"}]]}, {"state", "open"},
   {"assignee", :null}, {"milestone", :null}, {"comments", 7},
   {"created_at", "2014-07-11T10:14:08Z"},
   {"updated_at", "2014-07-29T10:47:34Z"}, {"closed_at", :null},
   {"body",
    "Streams offer an interesting way to bottle up a closure, effectively hiding state and then consume the output later.  However, this is limited to consuming the entire stream at a later point, in some cases it might be useful to be able to stop and resume in sections.\r\n\r\nThe feature request is first class support in the language for Stream suspension, however, I don't have a concrete suggestion on how that might look? My requirements are fairly  \"toy\" at present, but my use might mainly be to pull items one by one from a stream, eg\r\n\r\n s = Stream.cycle([1,2,3])\r\n {first, s} = \"take_one\" s \r\n # do something with first\r\n {next, s}  = \"take_one\" s\r\n\r\nPerhaps an \"iterator\" type which could wrap a stream?  The iterator could support Enumerable, and then the interface feels approximately like using Enum methods, but you also get back a continuation (the iterator) which allows you to continue if you wish?\r\n"}],
  [{"url", "https://api.github.com/repos/elixir-lang/elixir/issues/2497"},
   {"labels_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2497/labels{/name}"},
   {"comments_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2497/comments"},
   {"events_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2497/events"},
   {"html_url", "https://github.com/elixir-lang/elixir/issues/2497"},
   {"id", 37226099}, {"number", 2497},
   {"title", "Add Keyword.bool/3 (or similar)"},
   {"user",
    [{"login", "josevalim"}, {"id", 9582},
     {"avatar_url", "https://avatars.githubusercontent.com/u/9582?v=2"},
     {"gravatar_id", "e837f6b7fd146ab16ed3d663476c063e"},
     {"url", "https://api.github.com/users/josevalim"},
     {"html_url", "https://github.com/josevalim"},
     {"followers_url", "https://api.github.com/users/josevalim/followers"},
     {"following_url",
      "https://api.github.com/users/josevalim/following{/other_user}"},
     {"gists_url", "https://api.github.com/users/josevalim/gists{/gist_id}"},
     {"starred_url",
      "https://api.github.com/users/josevalim/starred{/owner}{/repo}"},
     {"subscriptions_url",
      "https://api.github.com/users/josevalim/subscriptions"},
     {"organizations_url", "https://api.github.com/users/josevalim/orgs"},
     {"repos_url", "https://api.github.com/users/josevalim/repos"},
     {"events_url", "https://api.github.com/users/josevalim/events{/privacy}"},
     {"received_events_url",
      "https://api.github.com/users/josevalim/received_events"},
     {"type", "User"}, {"site_admin", false}]},
   {"labels",
    [[{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/App%3AElixir"},
      {"name", "App:Elixir"}, {"color", "CCCCCC"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Kind%3AEnhacement"},
      {"name", "Kind:Enhacement"}, {"color", "009800"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Note%3ADiscussion"},
      {"name", "Note:Discussion"}, {"color", "bfdadc"}]]}, {"state", "open"},
   {"assignee", :null}, {"milestone", :null}, {"comments", 3},
   {"created_at", "2014-07-06T19:37:18Z"},
   {"updated_at", "2014-07-11T21:58:40Z"}, {"closed_at", :null},
   {"body",
    "Today it is verbose to assert if a value inside a keyword is a boolean. Take this use case for example:\r\n\r\nhttps://github.com/elixir-lang/elixir/blob/a6fab4a11143f91e68f659d12f46d56de13e6c03/lib/elixir/lib/string.ex#L240\r\n\r\nI expect a boolean value in there but it is hard to assert I got *only* a boolean value elegantly given `false` and `nil` are treated as \"falsy\" values and everything else is true. So far we have two options:\r\n\r\n  1. use `!!expr` to convert an expression to a boolean. This, however, would accept any value as true or false (we don't have strictness)\r\n\r\n  2. use a `case` to match on both true and false outcomes:\r\n\r\n        case Keyword.get(options, :trim, false) do\r\n          true -> true\r\n          false -> false\r\n        end\r\n\r\n    However this example is verbose and will lead to poor error messages.\r\n\r\nThe idea is to add a new function that returns a boolean value, defaulting to false in case there is no matching key. The goal is to have a strict function since the non-strict case is easy to achieve using `!!expr` above. \r\n\r\nThe proposal is to call the function `Keyword.bool/3` (and possibly a Keyword.bool!/2), their docs are indicated below:\r\n\r\n```elixir\r\n@doc \"\"\"\r\nRetrieves a boolean value for `key` from `dict`.\r\n\r\nIn case there is no such key, `default` is returned\r\n(`default` defaults to `false`).\r\n\r\nIn case there is a key and the value is not a boolean,\r\nan error is raised.\r\n\"\"\"\r\ndef bool(dict, key, default)\r\n\r\n@doc \"\"\"\r\nRetrieves a boolean value for `key` from `dict`.\r\n\r\nIn case there is no such key, an error is raised.\r\n\r\nIn case there is a key and the value is not a boolean,\r\nan error is raised.\r\n\"\"\"\r\ndef bool!(dict, key)\r\n```\r\n\r\nThoughts?"}],
  [{"url", "https://api.github.com/repos/elixir-lang/elixir/issues/2469"},
   {"labels_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2469/labels{/name}"},
   {"comments_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2469/comments"},
   {"events_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2469/events"},
   {"html_url", "https://github.com/elixir-lang/elixir/issues/2469"},
   {"id", 36872413}, {"number", 2469}, {"title", "Provide defguard"},
   {"user",
    [{"login", "josevalim"}, {"id", 9582},
     {"avatar_url", "https://avatars.githubusercontent.com/u/9582?v=2"},
     {"gravatar_id", "e837f6b7fd146ab16ed3d663476c063e"},
     {"url", "https://api.github.com/users/josevalim"},
     {"html_url", "https://github.com/josevalim"},
     {"followers_url", "https://api.github.com/users/josevalim/followers"},
     {"following_url",
      "https://api.github.com/users/josevalim/following{/other_user}"},
     {"gists_url", "https://api.github.com/users/josevalim/gists{/gist_id}"},
     {"starred_url",
      "https://api.github.com/users/josevalim/starred{/owner}{/repo}"},
     {"subscriptions_url",
      "https://api.github.com/users/josevalim/subscriptions"},
     {"organizations_url", "https://api.github.com/users/josevalim/orgs"},
     {"repos_url", "https://api.github.com/users/josevalim/repos"},
     {"events_url", "https://api.github.com/users/josevalim/events{/privacy}"},
     {"received_events_url",
      "https://api.github.com/users/josevalim/received_events"},
     {"type", "User"}, {"site_admin", false}]},
   {"labels",
    [[{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/App%3AElixir"},
      {"name", "App:Elixir"}, {"color", "CCCCCC"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Kind%3AFeature"},
      {"name", "Kind:Feature"}, {"color", "0052cc"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Level%3AAdvanced"},
      {"name", "Level:Advanced"}, {"color", "f7c6c7"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Note%3ADiscussion"},
      {"name", "Note:Discussion"}, {"color", "bfdadc"}]]}, {"state", "open"},
   {"assignee", :null}, {"milestone", :null}, {"comments", 11},
   {"created_at", "2014-07-01T08:36:51Z"},
   {"updated_at", "2014-08-08T20:50:36Z"}, {"closed_at", :null},
   {"body",
    "Today implementing a guard is somehow complicated as we need to quote/unquote arguments depending if the function is being invoked inside or outside of a guard. Here is an example from [the Record module](https://github.com/elixir-lang/elixir/blob/master/lib/elixir/lib/record.ex#L57-L71):\r\n\r\n```elixir\r\ndefmacro record?(data, kind) do\r\n  case Macro.Env.in_guard?(__CALLER__) do\r\n    true ->\r\n      quote do\r\n        is_tuple(unquote(data)) and tuple_size(unquote(data)) > 0\r\n          and :erlang.element(1, unquote(data)) == unquote(kind)\r\n      end\r\n    false ->\r\n      quote do\r\n        result = unquote(data)\r\n        is_tuple(result) and tuple_size(result) > 0\r\n          and :erlang.element(1, result) == unquote(kind)\r\n      end\r\n  end\r\nend\r\n```\r\n\r\nThe idea is to provide a `defguard(p)` macro that does all the work automatically and assert the expressions in the guard are valid. The example above would be rewritten as:\r\n\r\n```elixir\r\ndefguard record?(data, kind) do\r\n  is_tuple(data) and tuple_size(data) > 0 and elem(data, 0) == kind\r\nend\r\n```\r\n\r\n`defguard(p)` is extremely limited in scope:\r\n\r\n* the function head cannot pattern match\r\n* code blocks are not allowed in guards\r\n* no assignment\r\n* no local functions\r\n\r\nSince we have all limitations above, it is debatable if `defguard` should use the `do/end` syntax as it \"promotes\" code blocks. Here are other alternatives:\r\n\r\n```elixir\r\ndefguard record?(data, kind) =\r\n  is_tuple(data) and tuple_size(data) > 0 and elem(data, 0) == kind\r\n```\r\n\r\nor:\r\n\r\n```elixir\r\ndefguard record?(data, kind),\r\n  is_tuple(data) and tuple_size(data) > 0 and elem(data, 0) == kind\r\n```\r\n\r\nor even:\r\n\r\n```elixir\r\ndefguard record?(data, kind) when\r\n  is_tuple(data) and tuple_size(data) > 0 and elem(data, 0) == kind\r\n```\r\n\r\nThoughts?"}],
  [{"url", "https://api.github.com/repos/elixir-lang/elixir/issues/2318"},
   {"labels_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2318/labels{/name}"},
   {"comments_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2318/comments"},
   {"events_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2318/events"},
   {"html_url", "https://github.com/elixir-lang/elixir/pull/2318"},
   {"id", 34046190}, {"number", 2318},
   {"title", "Somewhat working prototype of IEx history in another process"},
   {"user",
    [{"login", "alco"}, {"id", 207748},
     {"avatar_url", "https://avatars.githubusercontent.com/u/207748?v=2"},
     {"gravatar_id", "96f31e49f44b5ba166999c4576c43c41"},
     {"url", "https://api.github.com/users/alco"},
     {"html_url", "https://github.com/alco"},
     {"followers_url", "https://api.github.com/users/alco/followers"},
     {"following_url",
      "https://api.github.com/users/alco/following{/other_user}"},
     {"gists_url", "https://api.github.com/users/alco/gists{/gist_id}"},
     {"starred_url",
      "https://api.github.com/users/alco/starred{/owner}{/repo}"},
     {"subscriptions_url", "https://api.github.com/users/alco/subscriptions"},
     {"organizations_url", "https://api.github.com/users/alco/orgs"},
     {"repos_url", "https://api.github.com/users/alco/repos"},
     {"events_url", "https://api.github.com/users/alco/events{/privacy}"},
     {"received_events_url",
      "https://api.github.com/users/alco/received_events"}, {"type", "User"},
     {"site_admin", false}]}, {"labels", []}, {"state", "open"},
   {"assignee", :null}, {"milestone", :null}, {"comments", 14},
   {"created_at", "2014-05-22T02:16:04Z"},
   {"updated_at", "2014-07-13T07:37:58Z"}, {"closed_at", :null},
   {"pull_request",
    [{"url", "https://api.github.com/repos/elixir-lang/elixir/pulls/2318"},
     {"html_url", "https://github.com/elixir-lang/elixir/pull/2318"},
     {"diff_url", "https://github.com/elixir-lang/elixir/pull/2318.diff"},
     {"patch_url", "https://github.com/elixir-lang/elixir/pull/2318.patch"}]},
   {"body", "Rough implementation of #2264."}],
  [{"url", "https://api.github.com/repos/elixir-lang/elixir/issues/2264"},
   {"labels_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2264/labels{/name}"},
   {"comments_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2264/comments"},
   {"events_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2264/events"},
   {"html_url", "https://github.com/elixir-lang/elixir/issues/2264"},
   {"id", 33238300}, {"number", 2264},
   {"title", "Do not use the process dictionary to store the history in IEx"},
   {"user",
    [{"login", "josevalim"}, {"id", 9582},
     {"avatar_url", "https://avatars.githubusercontent.com/u/9582?v=2"},
     {"gravatar_id", "e837f6b7fd146ab16ed3d663476c063e"},
     {"url", "https://api.github.com/users/josevalim"},
     {"html_url", "https://github.com/josevalim"},
     {"followers_url", "https://api.github.com/users/josevalim/followers"},
     {"following_url",
      "https://api.github.com/users/josevalim/following{/other_user}"},
     {"gists_url", "https://api.github.com/users/josevalim/gists{/gist_id}"},
     {"starred_url",
      "https://api.github.com/users/josevalim/starred{/owner}{/repo}"},
     {"subscriptions_url",
      "https://api.github.com/users/josevalim/subscriptions"},
     {"organizations_url", "https://api.github.com/users/josevalim/orgs"},
     {"repos_url", "https://api.github.com/users/josevalim/repos"},
     {"events_url", "https://api.github.com/users/josevalim/events{/privacy}"},
     {"received_events_url",
      "https://api.github.com/users/josevalim/received_events"},
     {"type", "User"}, {"site_admin", false}]},
   {"labels",
    [[{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/App%3AIEx"},
      {"name", "App:IEx"}, {"color", "CCCCCC"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Kind%3AChore"},
      {"name", "Kind:Chore"}, {"color", "fbca04"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Level%3AAdvanced"},
      {"name", "Level:Advanced"}, {"color", "f7c6c7"}]]}, {"state", "open"},
   {"assignee", :null}, {"milestone", :null}, {"comments", 2},
   {"created_at", "2014-05-10T14:02:49Z"},
   {"updated_at", "2014-07-13T07:37:58Z"}, {"closed_at", :null}, {"body", ""}],
  [{"url", "https://api.github.com/repos/elixir-lang/elixir/issues/2061"},
   {"labels_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2061/labels{/name}"},
   {"comments_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2061/comments"},
   {"events_url",
    "https://api.github.com/repos/elixir-lang/elixir/issues/2061/events"},
   {"html_url", "https://github.com/elixir-lang/elixir/issues/2061"},
   {"id", 27859560}, {"number", 2061},
   {"title", "Allow ^ in function heads (consider bitinfo and map variables)"},
   {"user",
    [{"login", "josevalim"}, {"id", 9582},
     {"avatar_url", "https://avatars.githubusercontent.com/u/9582?v=2"},
     {"gravatar_id", "e837f6b7fd146ab16ed3d663476c063e"},
     {"url", "https://api.github.com/users/josevalim"},
     {"html_url", "https://github.com/josevalim"},
     {"followers_url", "https://api.github.com/users/josevalim/followers"},
     {"following_url",
      "https://api.github.com/users/josevalim/following{/other_user}"},
     {"gists_url", "https://api.github.com/users/josevalim/gists{/gist_id}"},
     {"starred_url",
      "https://api.github.com/users/josevalim/starred{/owner}{/repo}"},
     {"subscriptions_url",
      "https://api.github.com/users/josevalim/subscriptions"},
     {"organizations_url", "https://api.github.com/users/josevalim/orgs"},
     {"repos_url", "https://api.github.com/users/josevalim/repos"},
     {"events_url", "https://api.github.com/users/josevalim/events{/privacy}"},
     {"received_events_url",
      "https://api.github.com/users/josevalim/received_events"},
     {"type", "User"}, {"site_admin", false}]},
   {"labels",
    [[{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/App%3AElixir"},
      {"name", "App:Elixir"}, {"color", "CCCCCC"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Kind%3AFeature"},
      {"name", "Kind:Feature"}, {"color", "0052cc"}],
     [{"url",
       "https://api.github.com/repos/elixir-lang/elixir/labels/Level%3AAdvanced"},
      {"name", "Level:Advanced"}, {"color", "f7c6c7"}]]}, {"state", "open"},
   {"assignee", :null}, {"milestone", :null}, {"comments", 12},
   {"created_at", "2014-02-19T08:59:36Z"},
   {"updated_at", "2014-08-02T09:21:10Z"}, {"closed_at", :null},
   {"body",
    "The following code should work:\r\n\r\n```iex\r\niex> x = 1\r\niex> fn(x, << y :: size(^x) >>) -> { x, y } end\r\n```\r\n\r\nThe following code should not:\r\n\r\n```iex\r\niex> x = 1\r\niex> fn(x, << y :: size(x) >>) -> { x, y } end\r\n```\r\n\r\nBoth expressions should be valid outside fn match though."}]]}