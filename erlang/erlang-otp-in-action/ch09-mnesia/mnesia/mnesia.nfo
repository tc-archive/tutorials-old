
# =============================================================================
# Setting up an Mnesia Database in Erlang
#
# During the course of creating this database, you’ll do the following:
#
# - Initialize Mnesia
# - Start your node
# - Create a schema
# - Start Mnesia
# - Create database tables
# - Populate the tables you’ve created
# - Perform some basic queries on the data


# =============================================================================
# Initialise the Mnesia Database
#
# Tells Mnesia to store its data in the specified directory. (Note the single 
# quotes needed on the command line in order to preserve the double quotes 
# around the string.) You also tell Erlang to start in distributed mode, using 
# the –name option, so you can begin working with replication in Mnesia right 
# away.
#
erl -mnesia dir '"/tmp/mnesia_store"' -name mynode

# Erlang/OTP 17 [erts-6.1] [source] [64-bit] [smp:8:8] [async-threads:10] [hipe] [kernel-poll:false] [dtrace]

# Eshell V6.1  (abort with ^G)
# (mynode@plato.config)1> 


# =============================================================================
# Create Mnesia Database Schems
#
# -record(user, {name }).
# -record(project, {title, description}).
# -record(contributor, {user_id, title }).

# Only create the schema on your local node. If the command was successful, 
# you now have an empty schema on your node. The command can fail if one of the 
# nodes in the list can’t be contacted, if Mnesia is already running on one 
# of the nodes, or if there is a previously existing schema on one of them. 
# (In the last case, you can use the function mnesia:delete_schema (Nodes) to 
# purge the old schema—but think twice before you do this: it makes any 
# existing tables unreadable.)
#
# (mynode@plato.config)1> mnesia:create_schema([node()]).
# ok
# (mynode@plato.config)2>


# =============================================================================
# Start Mnesia Database
#
# Run 'mnesia:start().' and 'mnesia:info().'.
#
# (mynode@plato.config)2> mnesia:start().
# ok
# (mynode@plato.config)4> mnesia:info().
# ---> Processes holding locks <---
# ---> Processes waiting for locks <---
# ---> Participant transactions <---
# ---> Coordinator transactions <---
# ---> Uncertain transactions <---
# ---> Active tables <---
# schema         : with 1        records occupying 412      words of mem
# ===> System info in version "4.12.1", debug level = none <===
# opt_disc. Directory "/tmp/mnesia_store" is used.
# use fallback at restart = false
# running db nodes   = ['mynode@plato.config']
# stopped db nodes   = []
# master node tables = []
# remote             = []
# ram_copies         = []
# disc_copies        = [schema]
# disc_only_copies   = []
# [{'mynode@plato.config',disc_copies}] = [schema]
# 2 transactions committed, 0 aborted, 0 restarted, 0 logged to disc
# 0 held locks, 0 in queue; 0 local transactions, 0 remote
# 0 transactions waits for other nodes: []
# ok
# (mynode@plato.config)5>





